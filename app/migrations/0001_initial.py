# Generated by Django 5.2.6 on 2025-09-16 07:44

import app.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Document name', max_length=255)),
                ('file', models.FileField(help_text='PDF file to upload', upload_to=app.models.pdf_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False, help_text='Whether PDF has been processed for barcodes')),
                ('total_pages', models.PositiveIntegerField(default=0, help_text='Total number of pages in PDF')),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='BarcodePageMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode_text', models.CharField(db_index=True, help_text='Text content of the barcode', max_length=500)),
                ('page_number', models.PositiveIntegerField(help_text='Page number (1-based)')),
                ('barcode_type', models.CharField(blank=True, help_text='Type of barcode detected (e.g., CODE128, QR, etc.)', max_length=50)),
                ('confidence', models.FloatField(default=1.0, help_text='Confidence level of barcode detection (0-1)')),
                ('x_position', models.FloatField(blank=True, help_text='X coordinate of barcode', null=True)),
                ('y_position', models.FloatField(blank=True, help_text='Y coordinate of barcode', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcode_mappings', to='app.pdfdocument')),
            ],
            options={
                'ordering': ['pdf_document', 'page_number'],
                'unique_together': {('pdf_document', 'barcode_text', 'page_number')},
            },
        ),
        migrations.CreateModel(
            name='PrintJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_size', models.CharField(choices=[('A4', 'A4'), ('A3', 'A3'), ('Letter', 'Letter'), ('Legal', 'Legal')], default='A4', max_length=10)),
                ('copies', models.PositiveIntegerField(default=1, help_text='Number of copies to print')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if print job failed')),
                ('barcode_mapping', models.ForeignKey(help_text='The barcode mapping that was printed', on_delete=django.db.models.deletion.CASCADE, to='app.barcodepagemapping')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
